---
title: "Compositional data exploration"
author: "Sharon DeChenne"
date: "2025-08-11"
categories: [early exploration]
image: "Screenshot 2025-08-11 165826.png"
---

Exploring compositional data, quarto blog posts, and Positron all at the same time for my own learning.

Aitchison, "The Statistical Analysis of Compositional Data"

# Chapter 1

Load some datasets from Aitchison "The Statistical Analysis of Compositional Data" in the "compositions" package.

```{r, warning=FALSE}
suppressPackageStartupMessages(library(compositions))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(isopleuros))
```

## Data 1
Hongite and Kongite from chapter 1. 
A, B, C, D, and E are albite, blandite, cornite, daubite, and endite. 

```{r}
# Data 1
data("Hongite")
head(Hongite)
```


## Data 2
```{r}
data("Kongite")
head(Kongite)
```

## Data 3
```{r}
# depth is possible covariate
data("Boxite")
head(Boxite)
```

## Data 4
```{r}
data("Coxite")
head(Coxite)
```

## Data 5
Rows 1-3 are the compositions, and row 4 is a covariate (water depth) which may account for some of the variation in the compositions
```{r}
data("ArcticLake")
head(ArcticLake)
```

# Ternary diagram
Re-creating Figure 1.2
```{r}
# Reorder columns to sand, silt, clay
arctic_reordered <- ArcticLake[, c("silt", "clay", "sand")]

# Plot with reordered vertices
ternary_plot(arctic_reordered)
ternary_grid()
```

# Testing something

```{r}
# Load necessary library
if (!requireNamespace('ggtern', quietly = TRUE)) {
  install.packages('ggtern')
}
library(ggtern)

# Set seed for reproducibility
set.seed(123)

# Generate compositional data for three components
n <- 100
comp1 <- runif(n)
comp2 <- runif(n)
comp3 <- runif(n)

# Normalize so all rows sum to 1
sum_components <- comp1 + comp2 + comp3
comp1 <- comp1 / sum_components
comp2 <- comp2 / sum_components
comp3 <- comp3 / sum_components

# Create data frame
comp_data <- data.frame(comp1, comp2, comp3)

# Plot ternary diagram
ggtern(data = comp_data, aes(x = comp1, y = comp2, z = comp3)) +
  geom_point() +
  labs(
    title = "Ternary Diagram of Compositional Data",
    x = "Comp 1",
    y = "Comp 2",
    z = "Comp 3"
  ) +
  theme_minimal()

```
